// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tipoul.Framework.Services.RequestLog.DataAccessLayer;

namespace Tipoul.Framework.Services.RequestLog.Migrations
{
    [DbContext(typeof(RequestLogDbContext))]
    partial class RequestLogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.IranKishGateWay.IranKishGateWayRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ExtraParameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IranKishGateWayRequestExceptionId")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IranKishGateWayRequests");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.IranKishGateWay.IranKishGateWayRequestException", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InnerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IranKishGateWayRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IranKishGateWayRequestId")
                        .IsUnique();

                    b.ToTable("IranKishGateWayRequestExceptions");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Sepehr.SepehrRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ExtraParameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SepehrRequestExceptionId")
                        .HasColumnType("int");

                    b.Property<int>("SepehrRequestLogId")
                        .HasColumnType("int");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SepehrRequests");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Sepehr.SepehrRequestException", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InnerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepehrRequestId")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SepehrRequestId")
                        .IsUnique();

                    b.ToTable("SepehrRequestExceptions");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.SepehrGateWay.SepehrGateWayRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ExtraParameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SepehrgateWayRequestExceptionId")
                        .HasColumnType("int");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SepehrGateWayRequests");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.SepehrGateWay.SepehrGateWayRequestException", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InnerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepehrGateWayReuqestId")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SepehrGateWayReuqestId")
                        .IsUnique();

                    b.ToTable("SepehrGateWayRequestExceptions");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Shaparak.ShaparakRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ExtraParameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShaparakRequestExceptionId")
                        .HasColumnType("int");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShaparakRequests");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Shaparak.ShaparakRequestException", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InnerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShaparakRequestId")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShaparakRequestId")
                        .IsUnique();

                    b.ToTable("ShaparakRequestExceptions");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.ShaparakTax.ShaparakTaxRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ExtraParameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShaparakTaxRequestExceptionId")
                        .HasColumnType("int");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShaparakTaxRequests");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.ShaparakTax.ShaparakTaxRequestException", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InnerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShaparakTaxRequestId")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShaparakTaxRequestId")
                        .IsUnique();

                    b.ToTable("ShaparakTaxRequestExceptions");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.IranKishGateWay.IranKishGateWayRequestException", b =>
                {
                    b.HasOne("Tipoul.Framework.Services.RequestLog.StorageModels.IranKishGateWay.IranKishGateWayRequest", "IranKishGateWayRequest")
                        .WithOne("IranKishGateWayRequestException")
                        .HasForeignKey("Tipoul.Framework.Services.RequestLog.StorageModels.IranKishGateWay.IranKishGateWayRequestException", "IranKishGateWayRequestId");

                    b.Navigation("IranKishGateWayRequest");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Sepehr.SepehrRequestException", b =>
                {
                    b.HasOne("Tipoul.Framework.Services.RequestLog.StorageModels.Sepehr.SepehrRequest", "SepehrRequest")
                        .WithOne("SepehrRequestException")
                        .HasForeignKey("Tipoul.Framework.Services.RequestLog.StorageModels.Sepehr.SepehrRequestException", "SepehrRequestId");

                    b.Navigation("SepehrRequest");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.SepehrGateWay.SepehrGateWayRequestException", b =>
                {
                    b.HasOne("Tipoul.Framework.Services.RequestLog.StorageModels.SepehrGateWay.SepehrGateWayRequest", "SepehrGateWayReuqest")
                        .WithOne("SepehrgateWayRequestException")
                        .HasForeignKey("Tipoul.Framework.Services.RequestLog.StorageModels.SepehrGateWay.SepehrGateWayRequestException", "SepehrGateWayReuqestId");

                    b.Navigation("SepehrGateWayReuqest");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Shaparak.ShaparakRequestException", b =>
                {
                    b.HasOne("Tipoul.Framework.Services.RequestLog.StorageModels.Shaparak.ShaparakRequest", "ShaparakRequest")
                        .WithOne("ShaparakRequestException")
                        .HasForeignKey("Tipoul.Framework.Services.RequestLog.StorageModels.Shaparak.ShaparakRequestException", "ShaparakRequestId");

                    b.Navigation("ShaparakRequest");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.ShaparakTax.ShaparakTaxRequestException", b =>
                {
                    b.HasOne("Tipoul.Framework.Services.RequestLog.StorageModels.ShaparakTax.ShaparakTaxRequest", "ShaparakTaxRequest")
                        .WithOne("ShaparakTaxRequestException")
                        .HasForeignKey("Tipoul.Framework.Services.RequestLog.StorageModels.ShaparakTax.ShaparakTaxRequestException", "ShaparakTaxRequestId");

                    b.Navigation("ShaparakTaxRequest");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.IranKishGateWay.IranKishGateWayRequest", b =>
                {
                    b.Navigation("IranKishGateWayRequestException");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Sepehr.SepehrRequest", b =>
                {
                    b.Navigation("SepehrRequestException");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.SepehrGateWay.SepehrGateWayRequest", b =>
                {
                    b.Navigation("SepehrgateWayRequestException");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.Shaparak.ShaparakRequest", b =>
                {
                    b.Navigation("ShaparakRequestException");
                });

            modelBuilder.Entity("Tipoul.Framework.Services.RequestLog.StorageModels.ShaparakTax.ShaparakTaxRequest", b =>
                {
                    b.Navigation("ShaparakTaxRequestException");
                });
#pragma warning restore 612, 618
        }
    }
}
